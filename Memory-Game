<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Memory Match Game</title>
<style>
  body {
    font-family: "Poppins", sans-serif;
    background: linear-gradient(135deg, #2c3e50, #4ca1af);
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    overflow: auto;
    margin: 0;
  }

  h1 {
    margin-bottom: 10px;
    text-shadow: 1px 1px 4px #000;
  }

  #controls {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 15px;
  }

  select, button {
    padding: 8px 14px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-weight: bold;
    font-size: 15px;
  }

  select {
    background: #fff;
    color: #000;
  }

  button {
    background: #ff9800;
    color: #fff;
    transition: 0.3s;
  }

  button:hover {
    background: #ffa726;
  }

  #game {
    display: grid;
    gap: 8px;
    justify-content: center;
    margin-top: 10px;
  }

  .card {
    width: 60px;
    height: 60px;
    background: #34495e;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.8em;
    cursor: pointer;
    transition: transform 0.3s, background 0.3s;
  }

  .card:hover {
    transform: scale(1.05);
  }

  .flipped {
    background: #ecf0f1;
    color: #000;
  }

  #message {
    margin-top: 15px;
    font-size: 1.2em;
    font-weight: bold;
  }

  #timer {
    margin-top: 5px;
    font-size: 1.1em;
  }
</style>
</head>
<body>

<h1>🍎 Memory Match Challenge 🍋</h1>

<div id="controls">
  <select id="difficulty">
    <option value="easy">Easy (4×3)</option>
    <option value="medium">Medium (4×5)</option>
    <option value="hard">Hard (6×5)</option>
  </select>

  <select id="fruitSet">
    <option value="fruits">Fruits 🍎🍋🍇🍌🍓</option>
    <option value="veggies">Vegetables 🥕🍅🥦🌽🍆</option>
    <option value="animals">Animals 🐶🐱🐭🐰🦊</option>
  </select>

  <button onclick="startGame()">Start</button>
  <button onclick="restartGame()">Restart</button>
</div>

<div id="timer"></div>
<div id="game"></div>
<div id="message"></div>

<script>
const fruitSets = {
  fruits: ['🍎','🍋','🍇','🍌','🍓','🍒','🍑','🍍','🥝','🍉','🍊','🍈','🍐','🍏','🥭','🍔','🍇','🍋','🍎','🍉'],
  veggies: ['🥕','🍅','🥦','🌽','🍆','🧄','🧅','🥔','🥬','🥒','🫑','🫘','🥕','🍅','🥦','🌽','🍆','🥬'],
  animals: ['🐶','🐱','🐭','🐰','🦊','🐻','🐼','🐸','🐵','🦁','🐯','🐷','🐮','🐤','🦉','🐧','🦄','🐨']
};

let cards = [];
let flipped = [];
let matched = 0;
let totalCards = 0;
let timer;
let timeLeft;

function shuffle(a){
  for(let i=a.length-1;i>0;i--){
    const j=Math.floor(Math.random()*(i+1));
    [a[i],a[j]]=[a[j],a[i]];
  }
  return a;
}

function startGame(){
  clearInterval(timer);
  const diff = document.getElementById('difficulty').value;
  const set = document.getElementById('fruitSet').value;
  let emojis = [...fruitSets[set]];
  let rows, cols, maxPairs, timeLimit;

  if(diff === 'easy'){
    rows = 4; cols = 3; maxPairs = 6; timeLimit = 30;
  } else if(diff === 'medium'){
    rows = 4; cols = 5; maxPairs = 10; timeLimit = 60;
  } else {
    rows = 6; cols = 5; maxPairs = 15; timeLimit = 75;
  }

  emojis = emojis.slice(0, maxPairs);
  emojis = [...emojis, ...emojis];
  shuffle(emojis);

  const game = document.getElementById('game');
  game.innerHTML = '';
  game.style.gridTemplateColumns = repeat(${cols}, 60px);
  cards = [];
  flipped = [];
  matched = 0;
  totalCards = emojis.length;
  timeLeft = timeLimit;
  document.getElementById('message').textContent = 'Match all pairs before time runs out!';

  emojis.forEach(em => {
    const c = document.createElement('div');
    c.className = 'card';
    c.dataset.val = em;
    c.onclick = () => flip(c);
    game.appendChild(c);
    cards.push(c);
  });

  document.getElementById('timer').textContent = ⏱ Time Left: ${timeLeft}s;
  timer = setInterval(() => {
    timeLeft--;
    document.getElementById('timer').textContent = ⏱ Time Left: ${timeLeft}s;
    if(timeLeft <= 0){
      clearInterval(timer);
      document.getElementById('message').textContent = '💀 Time’s up! You lose!';
      cards.forEach(c => c.onclick = null);
    }
  }, 1000);
}

function flip(c){
  if(flipped.length < 2 && !c.classList.contains('flipped')){
    c.classList.add('flipped');
    c.textContent = c.dataset.val;
    flipped.push(c);
    if(flipped.length === 2) setTimeout(check, 600);
  }
}

function check(){
  if(flipped[0].dataset.val === flipped[1].dataset.val){
    matched += 2;
    flipped = [];
    if(matched === totalCards){
      clearInterval(timer);
      document.getElementById('message').textContent = '🎉 You Win!';
    }
  } else {
    flipped.forEach(c => {
      c.classList.remove('flipped');
      c.textContent = '';
    });
    flipped = [];
  }
}

function restartGame(){
  startGame();
  document.getElementById('message').textContent = 'Game restarted!';
}
</script>
</body>
</html>
